// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.1

package atnf.atoms.mon.comms;

// <auto-generated>
//
// Generated from file `MoniCA.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


public class AlarmIce implements java.lang.Cloneable, java.io.Serializable
{
    public String pointname;

    public PointDataIce data;

    public boolean alarm;

    public boolean shelved;

    public String shelvedBy;

    public long shelvedAt;

    public boolean acknowledged;

    public String acknowledgedBy;

    public long acknowledgedAt;

    public int priority;

    public String guidance;

    public AlarmIce()
    {
    }

    public AlarmIce(String pointname, PointDataIce data, boolean alarm, boolean shelved, String shelvedBy, long shelvedAt, boolean acknowledged, String acknowledgedBy, long acknowledgedAt, int priority, String guidance)
    {
        this.pointname = pointname;
        this.data = data;
        this.alarm = alarm;
        this.shelved = shelved;
        this.shelvedBy = shelvedBy;
        this.shelvedAt = shelvedAt;
        this.acknowledged = acknowledged;
        this.acknowledgedBy = acknowledgedBy;
        this.acknowledgedAt = acknowledgedAt;
        this.priority = priority;
        this.guidance = guidance;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        AlarmIce _r = null;
        try
        {
            _r = (AlarmIce)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(pointname != _r.pointname)
            {
                if(pointname == null || _r.pointname == null || !pointname.equals(_r.pointname))
                {
                    return false;
                }
            }
            if(data != _r.data)
            {
                if(data == null || _r.data == null || !data.equals(_r.data))
                {
                    return false;
                }
            }
            if(alarm != _r.alarm)
            {
                return false;
            }
            if(shelved != _r.shelved)
            {
                return false;
            }
            if(shelvedBy != _r.shelvedBy)
            {
                if(shelvedBy == null || _r.shelvedBy == null || !shelvedBy.equals(_r.shelvedBy))
                {
                    return false;
                }
            }
            if(shelvedAt != _r.shelvedAt)
            {
                return false;
            }
            if(acknowledged != _r.acknowledged)
            {
                return false;
            }
            if(acknowledgedBy != _r.acknowledgedBy)
            {
                if(acknowledgedBy == null || _r.acknowledgedBy == null || !acknowledgedBy.equals(_r.acknowledgedBy))
                {
                    return false;
                }
            }
            if(acknowledgedAt != _r.acknowledgedAt)
            {
                return false;
            }
            if(priority != _r.priority)
            {
                return false;
            }
            if(guidance != _r.guidance)
            {
                if(guidance == null || _r.guidance == null || !guidance.equals(_r.guidance))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        if(pointname != null)
        {
            __h = 5 * __h + pointname.hashCode();
        }
        if(data != null)
        {
            __h = 5 * __h + data.hashCode();
        }
        __h = 5 * __h + (alarm ? 1 : 0);
        __h = 5 * __h + (shelved ? 1 : 0);
        if(shelvedBy != null)
        {
            __h = 5 * __h + shelvedBy.hashCode();
        }
        __h = 5 * __h + (int)shelvedAt;
        __h = 5 * __h + (acknowledged ? 1 : 0);
        if(acknowledgedBy != null)
        {
            __h = 5 * __h + acknowledgedBy.hashCode();
        }
        __h = 5 * __h + (int)acknowledgedAt;
        __h = 5 * __h + priority;
        if(guidance != null)
        {
            __h = 5 * __h + guidance.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(pointname);
        data.__write(__os);
        __os.writeBool(alarm);
        __os.writeBool(shelved);
        __os.writeString(shelvedBy);
        __os.writeLong(shelvedAt);
        __os.writeBool(acknowledged);
        __os.writeString(acknowledgedBy);
        __os.writeLong(acknowledgedAt);
        __os.writeInt(priority);
        __os.writeString(guidance);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        pointname = __is.readString();
        data = new PointDataIce();
        data.__read(__is);
        alarm = __is.readBool();
        shelved = __is.readBool();
        shelvedBy = __is.readString();
        shelvedAt = __is.readLong();
        acknowledged = __is.readBool();
        acknowledgedBy = __is.readString();
        acknowledgedAt = __is.readLong();
        priority = __is.readInt();
        guidance = __is.readString();
    }
}
