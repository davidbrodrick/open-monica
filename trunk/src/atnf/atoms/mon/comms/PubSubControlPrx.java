// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.1

package atnf.atoms.mon.comms;

// <auto-generated>
//
// Generated from file `MoniCA.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


public interface PubSubControlPrx extends Ice.ObjectPrx
{
    public void subscribe(PubSubRequest req);

    public void subscribe(PubSubRequest req, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_subscribe(PubSubRequest req);

    public Ice.AsyncResult begin_subscribe(PubSubRequest req, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_subscribe(PubSubRequest req, Ice.Callback __cb);

    public Ice.AsyncResult begin_subscribe(PubSubRequest req, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_subscribe(PubSubRequest req, Callback_PubSubControl_subscribe __cb);

    public Ice.AsyncResult begin_subscribe(PubSubRequest req, java.util.Map<String, String> __ctx, Callback_PubSubControl_subscribe __cb);

    public void end_subscribe(Ice.AsyncResult __result);

    public void keepalive(String topicname);

    public void keepalive(String topicname, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_keepalive(String topicname);

    public Ice.AsyncResult begin_keepalive(String topicname, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_keepalive(String topicname, Ice.Callback __cb);

    public Ice.AsyncResult begin_keepalive(String topicname, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_keepalive(String topicname, Callback_PubSubControl_keepalive __cb);

    public Ice.AsyncResult begin_keepalive(String topicname, java.util.Map<String, String> __ctx, Callback_PubSubControl_keepalive __cb);

    public void end_keepalive(Ice.AsyncResult __result);
}
