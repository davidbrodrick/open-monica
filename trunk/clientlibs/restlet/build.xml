<?xml version="1.0"?>
<project name="monica-restlet" basedir="." default="war">

  <!-- Define some names/properties -->
  <property name="src" value="src"/>
  <property name="properties" value="properties"/>
  <property name="output" value="build"/>
  <property name="javadoc" value="javadoc"/>
  <property name="jarname" value="monica-restlet.jar"/>
  <property name="prefix" value="install"/>
  <property name="dist" value="dist"/>
  <property name="webdir" value="WebContent"/>

  <!-- Purge build and doc directories (but not jar file) -->
  <target name="clean">
    <delete dir="${output}"/>
    <delete dir="${javadoc}"/>
    <delete file="${jarname}"/>
    <delete dir="${dist}"/>
	<delete>
		<fileset dir=".">
			<include name="*.war"/>
		</fileset>
	</delete>
  </target>
  
  
  <!-- Compile the java classes -->
  <target name="compile">
    <mkdir dir="${output}"/>
    <javac destdir="${output}" debug="true" includeantruntime="false" 
	   target="1.5">
      <src path="${src}"/>            
      <classpath>
	<pathelement path="${classpath}"/>
	<pathelement location="../../3rdParty/"/>
	<pathelement location="../../open-monica.jar"/>
      </classpath>
    </javac>
  </target>


  <!-- Build and sign the jar file -->
  <target name="jar" depends="compile">
    <jar destfile="${jarname}">
      <manifest>
        <attribute name="Main-Class" value="cass.monica.rest.MoniCAApplication"/>
      </manifest>
      <fileset dir="${output}"/>
    </jar>
  </target>

  <!-- Install the jar files to a run-time directory -->
  <target name="install" depends="jar">
    <!-- Copy jar files to lib area -->
    <property name="libdir" value="${prefix}/lib"/>
    <mkdir dir="${libdir}"/>
    <copy file="${jarname}" todir="${libdir}"/>
    <copy todir="${libdir}">
      <fileset dir="../../3rdParty/">
        <include name="log4j-1.2.15.jar"/>
        <include name="org.restlet.jar"/>
        <include name="org.restlet.ext.servlet.jar"/>
        <include name="gson-2.1.jar"/>
        <include name="Ice.jar"/>
      </fileset>
      <fileset dir="../../">
        <include name="open-monica.jar"/>
      </fileset>
    </copy>
    <property name="bindir" value="${prefix}/bin"/>
    <mkdir dir="${bindir}"/>
    <copy file="run_restlet.sh" todir="${bindir}"/>
    <chmod file="${bindir}/run_restlet.sh" perm="ugo+rx"/>
  </target>

  <!-- Build javadoc documentation tree -->	
  <target name="javadoc">
    <mkdir dir="${javadoc}/"/>
    <javadoc destdir="${javadoc}/"> 
      <link href="http://java.sun.com/javase/6/docs/api/"/>
      <fileset dir="${src}/" includes="**/*.java" />
    </javadoc>
  </target>


  <!-- Build war file -->
  <target name="war" depends="jar" description="generate war file">
	<!-- make dist directory -->
	<mkdir dir="${dist}"/>

	<!-- copy all web content to dist directory -->
	<copy todir="${dist}" >  
		<fileset dir="${webdir}" includes="**"/>  
	</copy>

	<!-- copy all jar files to WebContent/lib -->
	<copy todir="${dist}/WEB-INF/lib" >  
		<fileset dir="../../3rdParty/">
			<include name="log4j-1.2.15.jar"/>
			<include name="org.restlet.jar"/>
			<include name="org.restlet.ext.servlet.jar"/>
			<include name="gson-2.1.jar"/>
			<include name="Ice.jar"/>
		</fileset>
		<fileset dir="../../">
			<include name="open-monica.jar"/>
		</fileset>
		<fileset dir=".">
			<include name="monica-restlet.jar"/>
		</fileset>
	</copy>

	<!-- copy the correct properties file depending on build.env -->
	<!-- set build.env to parkes if it's not set -->
	<condition property="build.env" value="${build.env}" else="parkes">
		<isset property="build.env" />
	</condition>

	<copy file="${properties}/log4j.properties" tofile="${dist}/WEB-INF/classes/log4j.properties"/>
	<copy file="${properties}/${build.env}-monica-restlet.properties" 
		tofile="${dist}/WEB-INF/classes/monica-restlet.properties"/>

	<!-- package a war file -->
	<jar jarfile="${build.env}-monica.war" basedir="dist"/>
  </target>

  
</project>
