#summary Client for viewing MoniCA data from a web page.
#labels Phase-Implementation

= Introduction =

Many users will find it more convenient to view data from your MoniCA server
on a web page. This client library makes it easy to interface with the MoniCA
server and provides a number of ways of presenting the data on a webpage.

This client library requires the Perl client library, and includes a server-side
CGI (Perl) script for fetching the data, and Javascript code for dynamic
generation of the HTML pages.


= Details =

== Philosophy ==

The MoniCA web interface is designed to be portable, easy to use, and flexible.
It is possible to use only a single element (ie. point table, time series) in
a particular web page, or you can use the pre-made MoniCA Web Client web
interface.

== Javascript ==

The Javascript code can be found at `/clientlibs/web/htdocs/monica_web.js`, or
at `/clientlibs/web/htdocs/monica_web.src.js` for the more human-readable
version.

This code contains the following objects.

  * `monicaConnection`: the object responsible for communicating with the MoniCA server and updating the objects that use it
  * `monicaContainer`: a general-purpose container HTML element that can contain any of the other MoniCA elements, and handles their editing and communication needs
  * `pointTable`: can be used to show the latest values of any set of points
  * `timeSeries`: can be used to show values for any set of points over any particular time range
  * `monicaHTMLFrontPage`: builds a standard web interface, and allows for user interaction, in order to closely replicate the experience of the normal Java MoniCA client
  * `linkParser`: takes a web address that has MoniCA markup and generates the appropriate MoniCA elements, either on a monicaHTMLFrontPage or standalone web page



== Installation ==

=== Standard MoniCA HTML front page ===

This installation guide assumes a standard HTTP server setup, although there
should not be too much dependency on this.

The Javascript code depends on the following tools:
  * the [http://dojotoolkit.org/ Dojo toolkit], necessary for cross-browser coding
  * the [http://www.highcharts.com/ Highcharts plotting library]
  * the [http://jquery.com/ jQuery toolkit] (required by Highcharts)

The server-side CGI code depends on the MoniCA Perl client library.

You should start by installing the MoniCA Perl library on your machine so that
your normal Perl binaries can find it.

You should then download the latest Highcharts plotting library from
[http://www.highcharts.com their homepage.] Ideally, create a directory `js`
in the root HTML directory of your HTTP server, and ensure that it contains
a link to, or direct copy of, the `highcharts.js` file, such that the address
`http://www.yourserver.com/js/highcharts.js` would find the script.

Next, install the Perl query code `cgi-bin/monica_interface.pl` into your 
`cgi-bin` directory. Remember the full path to this code, as you will need it later.

Next, copy all the files and directories in `htdocs` to a location on your
web server, and remember the full path.

You will now need to configure `monica_frontpage.html` for your MoniCA setup.
Open `monica_frontpage.html` in your favourite editor, and:
  * change line 14 to reflect the location of your `highcharts.js` file
  * change line 15 to reflect the location of your `monica_web.js` file