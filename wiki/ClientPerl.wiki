#summary MoniCA query Perl module

= Introduction =

The Perl module `MoniCA.pm` makes it possible to quickly and easily query a MoniCA
server through the ASCII interface with a Perl program. This module takes care of:
  * time conversion (BAT to other formats)
  * response handling, giving back a handy Perl hash for each data point returned
  * long time range queries, where the MoniCA server may force it to be made in more than one query

This Perl module was written by Chris Phillips, and extended by Jamie Stevens.

= Details =

== Requirements & Installation ==

Using this Perl module also requires that you install the `Astro::Time` Perl module from CPAN:
http://search.cpan.org/~cphil/Astro-0.73/Astro/Time.pm

Installing the `MoniCA.pm` module is easy. Simply change into the `clientlibs/perl` directory, and give the following commands:
{{{
perl Makefile.PL
make
sudo make install
}}}

Providing that it finds all its prerequisites, you will now be able to use the `MoniCA.pm` module. If you see errors about missing modules, use the CPAN search to find and install them.

== Usage ==

To use this Perl module, include the following code at the top of your Perl program:
{{{
use Astro::Time;
use ATNF::MoniCA;
}}}

This will allow you to use the functions provided by the `MoniCA.pm' module.

Let's look at an example Perl program that queries a MoniCA server.
{{{
use strict;
use Astro::Time;
use ATNF::MoniCA;

my $mon=monconnect("monserver.domain.com");
if (!defined $mon){
  print "Could not connect to monitor server monserver.domain.com\n";
  exit;
}

my @monitor_points=("site.environment.weather.Temperature","site.environment.weather.Humidity");
my @point_vals=monpoll($mon,@monitor_points);
for (my $i=0;$i<=$#point_vals;$i++){
  print "point ".$point_vals[$i]->point." has value ".$point_vals[$i]->val." at time ".bat2cal($point_vals[$i]->bat,0)."\n";
}
}}}